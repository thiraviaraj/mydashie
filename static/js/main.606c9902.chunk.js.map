{"version":3,"sources":["testClassComp.js","Components/AccordionWidget.js","mainPage.js","Api/httpWrapper.js","Components/QuickViewWidget.js","Components/NavBar.js","Reducer/appReducer.js","Components/HomePage.js","Components/SideBar.js","Components/login.js","App.js","index.js"],"names":["React","Component","AccordionWidget","createContext","props","_useState","useState","maxHeight","_useState2","Object","slicedToArray","panelStyle","setPanelStyle","react_default","a","createElement","onClick","e","nextElementSibling","scrollHeight","toggleAccordion","target","className","itemName","style","nestedMenuItems","map","item","key","id","name","axios","create","baseURL","QuickViewWidget","aria-hidden","text","number","perc","desc","NavBar","isOpen","setIsOpen","document","getElementById","width","marginLeft","href","height","d","stroke","strokeWidth","NavLink","to","exact","activeStyle","color","appReducer","state","action","controlledState","totalcount","resetcount","widgetData","totalClicks","percentage","chartData","type","payload","index","val","Math","floor","data","objectSpread","Context","HomePage","_useReducer","useReducer","_useReducer2","dispatch","useEffect","title","cb","didRun","useRef","current","useEffectOnce","BrowserRouter","Fragment","Provider","value","Components_NavBar","SideBar","length","Components_QuickViewWidget","index_esm","chartType","loader","options","rootProps","data-testid","Route_default","path","render","SidePage","sideMenuItems","setSideMenuItems","useContext","httpWrapper","get","then","res","alt","src","menuItem","Components_AccordionWidget","children","loginPage","htmlFor","placeholder","required","App","component","Login","ReactDOM","src_App_0","querySelector"],"mappings":"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","file":"static/js/main.606c9902.chunk.js","sourcesContent":["import React from 'react';\n\nclass TestClassComp extends React.Component {\n    constructor() {\n        super();\n    }\n    state = {\n        id: 1,\n        t1: 11,\n        formField: [{\n            id: 'Kannan',\n            name: 'One',\n            type: 'text',\n            required: true,\n            pattern: 'a-z',\n            errorMsg: 'Mandatory Field'\n        },\n        {\n            id: 'Santhosh',\n            name: 'One1',\n            type: 'text',\n            required: true,\n            pattern: 'a-z',\n            errorMsg: 'Mandatory Field'\n        }\n    ],\n        errorMsg: \"\"\n    };\n    btnClicked = () => {\n        console.log(this.state.id);\n        this.doValidation();\n    }\n    valChanged (index,tar){\n        let copyData = {...this.state, t1: tar.target.value};\n        copyData.formField[index].id = tar.target.value;\n        \n        // copyData.id = tar.target.value;\n        \n        // console.log(copyData.id);\n        this.setState(copyData);\n    }\n    addMe () {\n        return (\n            <h1>thiravi {this.state.id}</h1>\n        )\n    }\n    doValidation () {\n        // this.dispact('thirai')\n        // this.addlistnert('thiravi', function)\n        if(!this.state.formField)\n            this.setState({errorMsg: \"required\"});\n            // this.state.errorMsg = \"Required\";\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.id}\n                {this.props.children}\n                <div>form one</div>\n                <h1>{this.state.errorMsg}</h1>\n                <input type=\"button\" onClick={this.btnClicked} />{this.state.t1}\n                {this.addMe()}\n                {\n                    this.state.formField.map(\n                        (item,index)=>{\n                            \n                            return (<span  key={item.name}><input type={item.type} value={item.id} onChange={this.valChanged.bind(this,index)} name={item.name} />\n                            <span>{item.id}</span></span>)\n                        }\n                    )\n                }\n                {/* <FormCtrl items={this.state.formField} validity=\"noCheck\" theme=\"default\"></FormCtrl>\n                <submit onClick={this.doValidation}></submit> */}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TestClassComp;","import React, {useState} from 'react';\n\nlet AccordionWidget = (props) => {\n    let [panelStyle, setPanelStyle] = useState({maxHeight: null});\n    let toggleAccordion = (e) => {\n        if(!panelStyle.maxHeight) {\n            panelStyle = {\n                maxHeight: e.nextElementSibling.scrollHeight + \"px\"\n            };\n        } else {\n            panelStyle = {\n                maxHeight: null\n            };\n        }\n        setPanelStyle(panelStyle);\n    }\n    return (\n        <span>\n            <button onClick={(e) => toggleAccordion(e.target)} className=\"accordion\">{props.itemName}</button>\n            <div className=\"panel\" style={panelStyle}>\n                <ul className=\"MenuItems\">\n                    {\n                        props.nestedMenuItems.map((item)=>{\n                            return <li key={item.id} className=\"MenuItem\">{item.name}</li>\n                        })\n                    }\n                </ul>\n            </div>\n        </span>\n    )\n}\n\nexport default AccordionWidget;","import React, {useState} from 'react';\nexport const themes = {\n    light: {\n      foreground: '#000000',\n      background: '#eeeeee',\n    },\n    dark: {\n      foreground: '#ffffff',\n      background: '#222222',\n    },\n  };\nexport const ThemeContext = React.createContext({});\n\nvar stateTemp = (props) => {\n    const [theme, setTheme] = useState(themes.dark);\n    \n    let setThemeByVal = (key) => {\n        if(key === \"light\")\n            setTheme(themes.light);\n        else\n            setTheme(themes.dark);\n        \n    }\n\n    const themeState = {\n        name: \"ha ha user\",\n        id: \"Super Theme\",\n        setTheme: setThemeByVal,\n        selected: theme\n    }\n\n    return (\n        <ThemeContext.Provider value={themeState}>\n            {props.children}\n        </ThemeContext.Provider>\n    )\n}\n\nexport default stateTemp;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://5c230da35db0f6001345fea3.mockapi.io',\n});\n\n// headers: {\n//     Authorization: 'Client-ID BasicAuth'\n// },","import React from 'react';\n\nlet QuickViewWidget = (props) => {\n    return (\n        <div className=\"quickViewBox\">\n            <div className=\"boxTopRow\">\n                <div>\n                    <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                </div>\n                <div>\n                    {props.text}\n                </div>\n            </div>\n            <div className=\"boxLead\">\n                {props.number}\n            </div>\n            <div className=\"smallFont\">\n                <span className=\"greenColor\">{props.perc}% </span>{props.desc}\n            </div>\n        </div>\n    )\n}\n\nexport default QuickViewWidget;","import React, {useState} from 'react';\nimport { BrowserRouter as Router, Link, NavLink, Redirect, Prompt} from 'react-router-dom';\nimport Route from 'react-router-dom/Route';\n\nlet NavBar = () => {\n    let [isOpen, setIsOpen] = useState(true);\n    let openSlideMenu = () => {\n        if(isOpen) {\n            document.getElementById('side-menu').style.width = '250px';\n            document.getElementById('Container').style.marginLeft = '250px';\n            setIsOpen(false);\n        } else {\n            document.getElementById('side-menu').style.width = '0';\n            document.getElementById('Container').style.marginLeft = '0';\n            setIsOpen(true);\n        }\n        \n    }\n    return (\n        <nav className=\"navbar\">\n            <span className=\"open-slide\" onClick={()=>openSlideMenu()}>\n                <a href=\"#\">\n                    <svg width=\"30\" height=\"28\">\n                        <path d=\"M0,5 30,5\" stroke=\"#3b5998\" strokeWidth=\"5\"/>\n                        <path d=\"M0,14 30,14\" stroke=\"#3b5998\" strokeWidth=\"5\"/>\n                        <path d=\"M0,23 30,23\" stroke=\"#3b5998\" strokeWidth=\"5\"/>\n                    </svg>\n                </a>\n            </span>\n            \n            <ul className=\"navbar-nav\">\n                <li>\n                    <NavLink to=\"/mydashie/\" exact activeStyle={{ color:'green' }}>Home</NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/mydashie/About\" exact activeStyle={{ color:'green' }}>About</NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/mydashie/Services\" exact activeStyle={{ color:'green' }}>Services</NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/mydashie/Contact\" exact activeStyle={{ color:'green' }}>Contact</NavLink>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default NavBar;","function appReducer(state, action) {\n    let chartData = [\n        ['Page', 'Total Clicks'],\n        ['Home', 100],\n        ['About', 0],\n        ['Services', 0],\n        ['Contact', 0],\n    ];\n    let controlledState = {totalcount:0,\n        resetcount:0,\n     widgetData:[{\n        id:1,\n        text:'Total Home Clicks',\n        totalClicks:0,\n        percentage:0\n    },\n    {\n        id:2,\n        text:'Total About Clicks',\n        totalClicks:0,\n        percentage:0\n    },\n    {\n        id:3,\n        text:'Total Services Clicks',\n        totalClicks:0,\n        percentage:0\n    },\n    {\n        id:4,\n        text:'Total Contact Clicks',\n        totalClicks:0,\n        percentage:0\n    }],\n    chartData:chartData\n};\n\n    switch (action.type) {\n      case 'reset': {\n        return action.payload;\n      }\n      case 'CountClicks': {\n        // if(!state[0] || (state[0] && state[0].ClickCounts == undefined)) {\n        //     state[0] = {ClickCounts: 0};\n        // } else {\n            ++state.widgetData[action.index].totalClicks\n            ++state.totalcount;\n            state.widgetData.map((val) => {\n                val.percentage = Math.floor((val.totalClicks/state.totalcount)*100);\n                return val;\n             });\n             state.chartData.map((data,index) => { \n                if(index > 0){ \n                    data[1] = state.widgetData[index-1].percentage;\n                    return data;\n                }else{\n                    return data;\n                }\n              })\n            // state.widgetData[action.index].percentage = Math.floor((state.widgetData[action.index].totalClicks/state.totalcount)*100);\n    //   }\n        // return [\n        //   ...state,\n        //   {\n        //     id: rand,\n        //     text: ''\n        //   },\n        // ];\n        return {\n            ...state\n        }\n      }\n      case 'ResetCounter': {\n          ++state.resetcount;\n          state.widgetData = controlledState.widgetData;\n          state.totalcount = controlledState.totalcount;\n          state.chartData.map((data,index) => { \n           if(index > 0){ \n               data[1] = state.widgetData[index-1].percentage;\n               return data;\n           }else{\n               return data;\n           }\n         })\n          return {\n              ...state\n        }\n      }\n      case 'setInitialState': {\n\n        state = controlledState;\n\n        return {...state};\n      }\n      default: {\n        //state;\n        debugger;\n        return {...state};\n      }\n    }\n}\n\nexport default appReducer;","import React, { useReducer, useState, useContext, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Switch, Link, NavLink, Redirect, Prompt} from 'react-router-dom';\nimport Route from 'react-router-dom/Route';\nimport QuickViewWidget from './QuickViewWidget';\nimport NavBar from './NavBar';\nimport SideBar from './SideBar';\nimport appReducer from '../Reducer/appReducer';\nimport { Chart } from \"react-google-charts\";\n\nexport const Context = React.createContext();\nfunction useEffectOnce(cb) {\n    const didRun = useRef(false);\n  \n    useEffect(() => {\n      if (!didRun.current) {\n        cb();\n        didRun.current = true;\n      }\n    });\n  }\nlet HomePage = () => {\n    const [state, dispatch] = useReducer(appReducer, {});\n    useEffect(()=>{\n        document.title = \"My Dashboard\";\n    });\n    \n      useEffectOnce(() => {\n          debugger;\n        dispatch({ type: 'setInitialState'});\n      });\n    \n    //   const widgetView = () => {\n    //     return (\n    //         // {state.widgetData ? state.widgetData.map((data) => <QuickViewWidget key={data.id} text={data.text} number={data.totalClicks} perc={data.percentage} desc=\" from last Week\"></QuickViewWidget> : ''};  \n    //         <span>\n    //             if(state && state.widgetData) {\n    //                 \"thiravi\"\n    //                 {/* // state.widgetData.map((data) => <QuickViewWidget key={data.id} text={data.text} number={data.totalClicks} perc={data.percentage} desc=\" from last Week\"></QuickViewWidget>) */}\n    //             }\n                \n    //         </span>\n    //       )\n    //   }\n\n\n    return (\n        \n    <Router>\n        <>\n            <Context.Provider value={dispatch}>\n                <div id=\"main\">\n                        <NavBar></NavBar>\n                        <SideBar></SideBar>\n                        <div id=\"quickViewWidgetViewer\">\n                        {state.widgetData && state.widgetData.length > 0 &&\n                            state.widgetData.map((data) => {\n                            return <QuickViewWidget key={data.id} text={data.text} number={data.totalClicks} perc={data.percentage} desc=\" from last Week\"></QuickViewWidget>\n                        })\n                        }\n                        \n                        <QuickViewWidget text=\"Total Clicks\" number={state.totalcount} perc=\"100\" desc=\" from last Week\"></QuickViewWidget>\n                        <QuickViewWidget text=\"Total Reset Clicks\" number={state.resetcount} perc=\"100\" desc=\" from last Week\"></QuickViewWidget>\n\n                            {/* <QuickViewWidget text=\"Total Users\" number=\"2500\" perc=\"4\" desc=\" from last Week\"></QuickViewWidget>\n                            <QuickViewWidget text=\"Total Users\" number=\"2500\" perc=\"4\" desc=\" from last Week\"></QuickViewWidget>\n                            <QuickViewWidget text=\"Total Users\" number=\"2500\" perc=\"4\" desc=\" from last Week\"></QuickViewWidget>\n                            <QuickViewWidget text=\"Total Users\" number=\"2500\" perc=\"4\" desc=\" from last Week\"></QuickViewWidget>\n                            <QuickViewWidget text=\"Total Users\" number=\"2500\" perc=\"4\" desc=\" from last Week\"></QuickViewWidget>\n                            <QuickViewWidget text=\"Total Clicks\" number={state[0] && state[0].ClickCounts} perc=\"4\" desc=\" from last Week\"></QuickViewWidget> */}\n                        </div>\n                        <div id=\"pageContent\">\n                        <Chart\n                            width={'1000px'}\n                            height={'400px'}\n                            chartType=\"PieChart\"\n                            loader={<div>Loading Chart</div>}\n                            data={state.chartData}\n                            options={{\n                                title: 'My Daily Activities',\n                            }}\n                            rootProps={{ 'data-testid': '1' }}\n                            />\n                            <Route path=\"/mydashie/\" exact render={\n                                    () => {\n                                        return ( <>\n                                            <h1>Welcome to My Homepage</h1>\n                                            <button onClick={() => dispatch({ type: 'CountClicks', index:0 })}>Increment HomePage</button>\n                                            <button className=\"Reset\" onClick={() => dispatch({ type: 'ResetCounter'})}>Reset</button>\n                                        </>);\n                                    }\n                                }/>\n\n                                <Route path=\"/mydashie/About\" exact render={\n                                    () => {\n                                        return ( <>\n                                            <h1>Welcome to My About</h1>\n                                            <button onClick={() => dispatch({ type: 'CountClicks', index:1})}>Increment About US</button>\n                                            <button className=\"Reset\" onClick={() => dispatch({ type: 'ResetCounter'})}>Reset</button>\n                                        </>);\n                                    }\n                                }/> \n\n                                <Route path=\"/mydashie/Services\" exact render={\n                                    () => {\n                                        return ( <>\n                                            <h1>Welcome to My Services</h1>\n                                            <button onClick={() => dispatch({ type: 'CountClicks', index:2 })}>Increment Services</button>\n                                            <button className=\"Reset\" onClick={() => dispatch({ type: 'ResetCounter'})}>Reset</button>\n                                        </>);\n                                    }\n                                }/> \n\n                                <Route path=\"/mydashie/Contact\" exact render={\n                                    () => {\n                                        return ( <>\n                                            <h1>Welcome to My Contact</h1>\n                                            <button onClick={() => dispatch({ type: 'CountClicks', index:3 })}>Increment Contact</button>\n                                            <button className=\"Reset\" onClick={() => dispatch({ type: 'ResetCounter'})}>Reset</button>\n                                        </>);\n                                    }\n                                }/>          \n                        </div>\n                </div>\n            </Context.Provider>\n        </>\n    </Router>\n    )\n}\n\nexport default HomePage;","import React, {useState, useContext, useEffect} from 'react';\nimport AccordionWidget from './AccordionWidget';\nimport httpWrapper from '../Api/httpWrapper';\nimport {Context} from './HomePage';\n\n\nconst SidePage = () => {\n    let [sideMenuItems, setSideMenuItems] = useState([]);\n    const dispatch = useContext(Context);\n    useEffect(()=>{\n        httpWrapper.get('/api/v1/menu').then(res => {\n            setSideMenuItems(res.data);\n        });\n    }, []\n    )\n    return (\n        <div id=\"side-menu\" className=\"side-nav\">\n            <span id=\"titleHolder\"><span><img alt=\"title\" width=\"40\" src=\"http://chittagongit.com//images/camtasia-studio-icon/camtasia-studio-icon-17.jpg\"></img></span><span className=\"titleFont\">My DashBoard!</span></span>\n            <span id=\"introHolder\">\n                <div id=\"logoHolder\">\n                    <div id=\"profImg\"><img width=\"50\" alt=\"logo\" src=\"https://i0.wp.com/www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png?fit=256%2C256&quality=100&ssl=1\"></img></div>\n                    <div id=\"desg\">GENERAL</div>\n                </div>\n                <div id=\"textHolder\">\n                    <div id=\"greet\" className=\"greyColor\">Welcome,</div>\n                    <div id=\"name\">Thiraviaraj B</div>\n                </div>\n            </span>\n            <div id=\"menuList\">\n                {\n                    sideMenuItems.map((menuItem)=>{\n                        return <AccordionWidget key={menuItem.id} itemName={menuItem.name} nestedMenuItems={menuItem.children}></AccordionWidget>\n                    })\n                }\n            </div>\n            <div id=\"leftFooter\">\n                <div className=\"icon\"><img width=\"50\" alt=\"icon1\" src=\"http://chittagongit.com//images/controller-icon/controller-icon-7.jpg\"></img></div>\n                <div className=\"icon\"><img width=\"50\" alt=\"icon2\" src=\"http://chittagongit.com//images/icon-spider/icon-spider-14.jpg\"></img></div>\n                <div className=\"icon\"><img width=\"50\" alt=\"icon3\" src=\"http://chittagongit.com//images/notification-bell-icon/notification-bell-icon-7.jpg\"></img></div>\n            </div>\n      </div>\n    )\n}\n\nexport default SidePage;","import React from 'react';\n\nlet loginPage = ()=> {\n    return (\n        <div id=\"loginWrapper\">\n            <form action=\"/action_page.php\">\n                <div className=\"imgcontainer\">\n                    <img src=\"https://www.w3schools.com/howto/img_avatar2.png\" alt=\"Avatar\" className=\"avatar\" />\n                </div>\n\n                <div className=\"container\">\n                    <label htmlFor=\"uname\"><b>Username</b></label>\n                    <input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required/>\n\n                    <label htmlFor=\"psw\"><b>Password</b></label>\n                    <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required/>\n                        \n                    <button type=\"submit\">Login</button>\n                    <label>\n                    <input type=\"checkbox\" name=\"remember\" /> Remember me\n                    </label>\n                </div>\n\n                <div className=\"container\">\n                    <button type=\"button\" className=\"cancelbtn\">Cancel</button>\n                    <button type=\"button\" className=\"cancelbtn\">Login with Google</button>\n                    <button type=\"button\" className=\"cancelbtn\">Login with Facebook</button>\n                    <span className=\"psw\">Forgot <a href=\"#\">password?</a></span>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default loginPage;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Link, NavLink, Redirect, Prompt} from 'react-router-dom';\nimport Route, {Switch} from 'react-router-dom/Route';\nimport TestClassComp from './testClassComp';\nimport MainPage from './mainPage';\nimport DisplayCounter from './lifeCycleHooks';\nimport SideBar from './Components/SideBar';\nimport Login from './Components/login';\nimport HomePage from './Components/HomePage';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <div id=\"Container\">\n          {/* <MainPage>\n            <TestClassComp></TestClassComp>\n            <DisplayCounter></DisplayCounter>\n          </MainPage> */}\n          {/* <SideBar></SideBar> */}\n          {/* <Switch> */}\n          <Router>\n            <>\n            <Route path=\"/\" exact component={Login} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/mydashie\" component={HomePage} />\n            <Route path=\"/HomePage\" component={HomePage} />\n          </>\n          {/* <Route component={HomePage} /> */}\n          {/* <HomePage></HomePage> */}\n          \n          </Router>\n          {/* </Switch> */}\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector(\"#root\"))"],"sourceRoot":""}